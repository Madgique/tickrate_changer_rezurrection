plugins {
    id 'com.github.johnrengelman.shadow'
}

loom {
    forge {
        mixinConfig project.mixin_files
    }
}

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

dependencies {
    forge "net.minecraftforge:forge:$rootProject.minecraft_version-$rootProject.forge_version"

    // Architectury API. This is optional, and you can comment it out if you don't need it.
    modImplementation "me.shedaniel:architectury-forge:$rootProject.architectury_api_version"
    modApi "me.shedaniel.cloth:cloth-config-forge:$rootProject.cloth_config_version"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionForge')
}

processResources {
    inputs.property 'mod_version', project.version
    inputs.property 'mod_id', project.mod_id

    inputs.property 'mod_display_name', project.mod_display_name
    inputs.property 'mod_description', project.mod_description
    inputs.property 'mod_authors', project.mod_authors
    inputs.property 'mod_credits', project.mod_credits
    inputs.property 'mod_license', project.mod_license
    inputs.property 'mod_sources', project.mod_sources
    inputs.property 'mod_issue_tracker_url', project.mod_issue_tracker_url

    filesMatching('META-INF/mods.toml') {
        expand mod_version: project.version,
                mod_id: mod_id,

                mod_description: mod_description,
                mod_display_name: mod_display_name,
                mod_authors: mod_authors,
                mod_credits: mod_credits,
                mod_license: mod_license,
                mod_sources: mod_sources,
                mod_issue_tracker_url: mod_issue_tracker_url
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}
